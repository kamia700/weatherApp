{"version":3,"sources":["components/Navbar.module.css","components/InfoBar.module.css","components/DisplayWeather.js","components/Navbar.js","components/InfoBar.js","App.js","index.js","components/DisplayWeather.module.css"],"names":["module","exports","DisplayWeather","props","weather","temperature","description","iconurl","img","className","style","weather__temp","weather__title","src","alt","Math","round","Navbar","location","menu__wrap","menu","form","onSubmit","e","changeWeather","visually__hidden","form__input","placeholder","onChange","changeRegion","target","value","autoComplete","type","form__OKbtn","form__changes","form__location","switch","switch__wrap","id","switch__Cbtn","onClick","handleClick","changeUnits","switch__Fbtn","InfoBar","humidity","pressure","wind","wind_dir","arrayPosition","floor","info","info__block","API_KEY","initialState","coords","latitude","longitude","inputData","units","activeClassBtn","App","evt","preventDefault","Axios","get","state","then","response","weatherData","data","name","speed","deg","main","temp","icon","setState","unit","fahrenheit","celsius","document","getElementById","classList","add","remove","navigator","geolocation","getCurrentPosition","position","currentCoords","error","code","PERMISSION_DENIED","console","log","this","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b5d6c0a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"visually__hidden\":\"Navbar_visually__hidden__1gaaT\",\"menu__wrap\":\"Navbar_menu__wrap__14jN5\",\"menu\":\"Navbar_menu__2e57V\",\"form\":\"Navbar_form__VWdS4\",\"form__OKbtn\":\"Navbar_form__OKbtn__-zuJn\",\"form__input\":\"Navbar_form__input__2vdhl\",\"form__changes\":\"Navbar_form__changes__3ez_c\",\"form__location\":\"Navbar_form__location__2utdc\",\"switch\":\"Navbar_switch__3yPoA\",\"switch__wrap\":\"Navbar_switch__wrap__ekP1L\",\"switch__Cbtn\":\"Navbar_switch__Cbtn__JYOv5\",\"switch__Fbtn\":\"Navbar_switch__Fbtn__cn90M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"InfoBar_info__2sF46\",\"info__block\":\"InfoBar_info__block__3Xddc\"};","import React from 'react';\r\nimport style from'./DisplayWeather.module.css';\r\n\r\nexport default function DisplayWeather (props) {\r\n  const { temperature, description, img } = props.weather;\r\n  let iconurl = \"http://openweathermap.org/img/wn/\" + img + \"@2x.png\";\r\n\r\n  return (\r\n    <div>\r\n      <section className={style.weather}>\r\n        <div className={style.weather__temp}>\r\n          <div className={style.weather__title}>\r\n            <img className=\"mainImg\" src={iconurl} alt=\"weather-img\" />\r\n            <span>{Math.round(temperature)}<sup>o</sup></span>\r\n          </div>\r\n          <p>{description}</p> \r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport style from'./Navbar.module.css';\r\n\r\nexport default function Navbar (props) {\r\n  const { temperature, location } = props.weather;\r\n  return (\r\n    <div className={style.menu__wrap}>\r\n      <nav className={style.menu}>\r\n        <form className={style.form} onSubmit={(e) => {props.changeWeather(e)}}>\r\n          <label className={style.visually__hidden}>Название города</label>\r\n          <input className={style.form__input} placeholder={location || ''} onChange={(e) => props.changeRegion(e.target.value)} autoComplete=\"on\" />\r\n          <button type=\"submit\" className={style.form__OKbtn} >OK</button>\r\n          <div className={style.form__changes}>\r\n            <p>Сменить город</p>\r\n            <p className={style.form__location}>\r\n              Мое местоположение</p>\r\n          </div>\r\n        </form>\r\n\r\n        <div className={style.switch}>\r\n          <span><sup>o</sup></span>\r\n          <div className={style.switch__wrap}>\r\n            <button id='Cbtn' className={style.switch__Cbtn  + ' active'} onClick={(e) => { props.handleClick(e.target.id); props.changeUnits('metric', temperature)} }>C</button>\r\n            <button id='Fbtn' className={style.switch__Fbtn } onClick={(e) => { props.handleClick(e.target.id); props.changeUnits('imperial', temperature)} }>F</button> \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport style from'./InfoBar.module.css';\r\n\r\nexport default function InfoBar (props) {\r\n  const { humidity, pressure, wind, wind_dir } = props.weather;\r\n  const compassPoints = [\"северный\", \"северо-восточный\", \"восточный\", \"юго-восточный\", \"южный\", \"юго-западный\",\r\n                          \"западный\", \"северо-западный\"];\r\n  let rawPosition = Math.floor((wind_dir / 22.5) + 0.5);\r\n  let arrayPosition = (rawPosition % 8);\r\n\r\n  return (\r\n    <div>\r\n    <section className={style.info}>\r\n        <div className={style.info__block}>\r\n          <p>Ветер</p>\r\n          <span>{Math.round(wind)} м/с, {compassPoints[arrayPosition]}</span>\r\n        </div>\r\n        <div className={style.info__block}>\r\n          <p>Давление</p>\r\n          <span>{pressure} мм рт. ст.</span>\r\n        </div>\r\n        <div className={style.info__block}>\r\n          <p>Влажность</p>\r\n          <span>{humidity}%</span>\r\n        </div>\r\n        <div className={style.info__block}>\r\n          <p>Вероятность дождя</p>\r\n          <span>10%</span>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\nimport './App.css';\r\nimport DisplayWeather from './components/DisplayWeather.js';\r\nimport Navbar from './components/Navbar.js';\r\nimport InfoBar from './components/InfoBar.js';\r\n\r\nconst API_KEY = '27ba8c742a54e5d3e7e1e27f3a0e5fa4';\r\n\r\nconst initialState = {\r\n  coords: {\r\n    latitude: 51,\r\n    longitude: -0.12\r\n  },\r\n  weather: {},\r\n  inputData: '',\r\n  units: 'metric',\r\n  activeClassBtn: 'Cbtn'\r\n} \r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  // initialData(weatherData) {\r\n  //   this.setState({ weather: weatherData});\r\n  // }\r\n\r\n  componentDidMount() {    \r\n    // get device location\r\n    if(navigator.geolocation){\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        let currentCoords = {\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude\r\n        };\r\n        this.setState({coords:currentCoords});\r\n        \r\n        //API call\r\n        Axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${this.state.coords.latitude}&lon=${this.state.coords.longitude}&lang=ru&appid=${API_KEY}&units=metric/`).then(response => {\r\n          let weatherData = {\r\n            location: response.data.name,\r\n            wind: response.data.wind.speed,\r\n            wind_dir: response.data.wind.deg,\r\n            temperature: response.data.main.temp,\r\n            description: response.data.weather[0].description,\r\n            img: response.data.weather[0].icon,\r\n            humidity: response.data.main.humidity,\r\n            pressure: response.data.main.pressure\r\n          };\r\n          this.setState({ weather: weatherData});\r\n        })\r\n      }, (error) => {\r\n          // runs when an error occurs or when you deny access\r\n          if (error.code === error.PERMISSION_DENIED) {\r\n            console.log(\"User denied the request for Geolocation:-(\");\r\n          }\r\n          Axios.get(`http://api.openweathermap.org/data/2.5/weather?q=Omsk&lang=ru&appid=${API_KEY}&units=metric/`).then(response => {\r\n            let weatherData = {\r\n              location: response.data.name,\r\n              wind: response.data.wind.speed,\r\n              wind_dir: response.data.wind.deg,\r\n              temperature: response.data.main.temp,\r\n              description: response.data.weather[0].description,\r\n              img: response.data.weather[0].icon,\r\n              humidity: response.data.main.humidity,\r\n              pressure: response.data.main.pressure\r\n            };\r\n            this.setState({ weather: weatherData});\r\n          })\r\n        }\r\n      );\r\n    } else {\r\n      console.log(\"Geolocation is not supported by this browser.\")      \r\n    }\r\n\r\n  }\r\n\r\n  changeWeather = (evt) => {\r\n    evt.preventDefault();\r\n    Axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.inputData}&lang=ru&appid=${API_KEY}&units=${this.state.units}/`).then(response => {\r\n      let weatherData = {\r\n        location: response.data.name,\r\n        wind: response.data.wind.speed,\r\n        wind_dir: response.data.wind.deg,\r\n        temperature: response.data.main.temp,\r\n        description: response.data.weather[0].description,\r\n        img: response.data.weather[0].icon,\r\n        humidity: response.data.main.humidity,\r\n        pressure: response.data.main.pressure\r\n      };\r\n      this.setState({ \r\n        weather: weatherData\r\n      });\r\n    })\r\n  }\r\n\r\n  //track the input value\r\n  changeRegion = (value) => {\r\n    this.setState({ inputData: value});\r\n  }  \r\n\r\n  //track units value\r\n  changeUnits=(unit,temp)=> {\r\n    if (this.state.units !== unit) {\r\n      this.setState({\r\n        units: unit\r\n      })\r\n\r\n    switch(unit) {\r\n      case 'imperial':\r\n        let fahrenheit = Math.round((temp * 1.8) + 32);\r\n        this.setState({\r\n          weather: {\r\n          ...this.state.weather,\r\n          temperature: fahrenheit\r\n          }\r\n        });\r\n        break;\r\n      case 'metric':\r\n        let celsius = Math.round(((temp - 32) / 1.8));\r\n        this.setState({\r\n          weather: {\r\n          ...this.state.weather,\r\n          temperature: celsius\r\n          }\r\n        });\r\n        break;\r\n      default:\r\n        unit='metric';\r\n      } \r\n    }\r\n  }\r\n\r\n  handleClick=(id) => {\r\n     this.setState({\r\n      activeClassBtn: id\r\n    })\r\n\r\n    if(this.state.activeClassBtn !== id) {\r\n      let el = document.getElementById(id);\r\n      el.classList.add('active');\r\n      let prevEl = document.getElementById(this.state.activeClassBtn);\r\n      prevEl.classList.remove('active');\r\n    } \r\n\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className={'wrap'}>\r\n          <Navbar handleClick= {this.handleClick} changeWeather = {this.changeWeather} changeRegion={this.changeRegion} changeUnits={this.changeUnits} weather={this.state.weather} units={this.state.units} activeClassBtn={this.state.activeClassBtn}/>\r\n          <DisplayWeather weather={this.state.weather} />\r\n          <InfoBar weather={this.state.weather} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather__temp\":\"DisplayWeather_weather__temp__3YtSc\",\"weather__title\":\"DisplayWeather_weather__title__3zuC8\"};"],"sourceRoot":""}