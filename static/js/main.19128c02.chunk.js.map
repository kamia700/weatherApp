{"version":3,"sources":["components/Navbar.module.css","components/InfoBar.module.css","components/DisplayWeather.js","components/Navbar.js","components/InfoBar.js","App.js","index.js","components/DisplayWeather.module.css"],"names":["module","exports","DisplayWeather","props","weather","temperature","description","iconurl","img","className","style","weather__temp","weather__title","src","alt","Math","round","Navbar","location","menu_wrap","menu","form","onSubmit","e","changeWeather","visually__hidden","form__input","placeholder","onChange","changeRegion","target","value","form__OKbtn","form__changes","form__location","switch","switch__wrap","switch__Cbtn","active","onClick","changeUnits","switch__Fbtn","InfoBar","humidity","pressure","wind","wind_dir","arrayPosition","floor","info","info__block","API_KEY","App","unit","temp","setState","units","fahrenheit","state","celsius","evt","preventDefault","Axios","get","inputData","then","response","weatherData","data","name","speed","deg","main","icon","change","coords","latitude","longitude","this","navigator","geolocation","getCurrentPosition","position","currentCoords","error","code","PERMISSION_DENIED","console","log","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,iBAAmB,iCAAiC,UAAY,0BAA0B,KAAO,qBAAqB,KAAO,qBAAqB,YAAc,4BAA4B,YAAc,4BAA4B,cAAgB,8BAA8B,eAAiB,+BAA+B,OAAS,uBAAuB,aAAe,6BAA6B,aAAe,6BAA6B,aAAe,6BAA6B,OAAS,yB,uCCAngBD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,YAAc,+B,+LCE9C,SAASC,EAAgBC,GACtC,MAA0CA,EAAMC,QAAxCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YAIjBC,EAAU,oCAJd,EAAkCC,IAIwB,UAS1D,OACE,8BACE,yBAASC,UAAWC,IAAMN,QAA1B,SACE,sBAAKK,UAAWC,IAAMC,cAAtB,UACE,sBAAKF,UAAWC,IAAME,eAAtB,UACE,qBAAKH,UAAU,UAAUI,IAAKN,EAASO,IAAI,gBAC3C,iCAAOC,KAAKC,MAAMX,GAAa,0CAEjC,4BAAIC,W,oBCrBC,SAASW,EAAQd,GAC9B,MAAkCA,EAAMC,QAAhCC,EAAR,EAAQA,YAAaa,EAArB,EAAqBA,SAErB,OACE,qBAAKT,UAAWC,IAAMS,UAAtB,SACE,sBAAKV,UAAWC,IAAMU,KAAtB,UACE,uBAAMX,UAAWC,IAAMW,KAAMC,SAAU,SAACC,GAAD,OAAOpB,EAAMqB,cAAcD,IAAlE,UACE,uBAAOd,UAAWC,IAAMe,iBAAxB,mGACA,uBAAOhB,UAAWC,IAAMgB,YAAaC,YAAaT,GAAY,GAAIU,SAAU,SAACL,GAAD,OAAOpB,EAAM0B,aAAaN,EAAEO,OAAOC,UAE/G,wBAAQtB,UAAWC,IAAMsB,YAAzB,gBACA,sBAAKvB,UAAWC,IAAMuB,cAAtB,UACE,0GACA,mBAAGxB,UAAWC,IAAMwB,eAApB,2HAQJ,sBAAKzB,UAAWC,IAAMyB,OAAtB,UACE,+BAAM,sCACN,sBAAK1B,UAAWC,IAAM0B,aAAtB,UACE,wBAAQ3B,UAAWC,IAAM2B,aAAe,IAAM3B,IAAM4B,OAAQC,QAAS,kBAAMpC,EAAMqC,YAAY,SAAUnC,IAAvG,eACA,wBAAQI,UAAWC,IAAM+B,aAAcF,QAAS,kBAAMpC,EAAMqC,YAAY,WAAYnC,IAApF,0B,oBC1BG,SAASqC,EAASvC,GAC/B,MAA+CA,EAAMC,QAA7CuC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,SAI9BC,EADchC,KAAKiC,MAAOF,EAAW,KAAQ,IACd,EAEnC,OACE,8BACA,0BAASrC,UAAWC,IAAMuC,KAA1B,UACI,sBAAKxC,UAAWC,IAAMwC,YAAtB,UACE,+DACA,iCAAOnC,KAAKC,MAAM6B,GAAlB,mBAVc,CAAC,mDAAY,8FAAoB,yDAAa,4EAAiB,iCAAS,sEACtE,mDAAY,yFASiBE,SAE/C,sBAAKtC,UAAWC,IAAMwC,YAAtB,UACE,iFACA,iCAAON,EAAP,kDAEF,sBAAKnC,UAAWC,IAAMwC,YAAtB,UACE,uFACA,iCAAOP,EAAP,UAEF,sBAAKlC,UAAWC,IAAMwC,YAAtB,UACE,kIACA,+CCpBV,IAAMC,EAAU,mCAwJDC,E,kDAnJb,aAAe,IAAD,8BACZ,gBAmBFZ,YAAY,SAACa,EAAKC,GAKlB,OAJE,EAAKC,SAAS,CACZC,MAAOH,IAGJA,GACL,IAAK,WACH,IAAII,EAAa1C,KAAKC,MAAc,IAAPsC,EAAc,IAC3C,EAAKC,SAAS,CACZnD,QAAQ,2BACL,EAAKsD,MAAMtD,SADP,IAEPC,YAAaoD,MAGf,MACF,IAAK,SACH,IAAIE,EAAU5C,KAAKC,OAAQsC,EAAO,IAAM,KACxC,EAAKC,SAAS,CACZnD,QAAQ,2BACL,EAAKsD,MAAMtD,SADP,IAEPC,YAAasD,MAGf,MACF,QACEN,EAAK,WA7CK,EA8Gd7B,cAAgB,SAACoC,GACfA,EAAIC,iBACJC,IAAMC,IAAN,2DAA8D,EAAKL,MAAMM,UAAzE,0BAAoGb,EAApG,kBAA4Hc,MAAK,SAAAC,GAC/H,IAAIC,EAAc,CAChBjD,SAAUgD,EAASE,KAAKC,KACxBxB,KAAMqB,EAASE,KAAKvB,KAAKyB,MACzBxB,SAAUoB,EAASE,KAAKvB,KAAK0B,IAC7BlE,YAAa6D,EAASE,KAAKI,KAAKlB,KAChChD,YAAa4D,EAASE,KAAKhE,QAAQ,GAAGE,YACtCE,IAAK0D,EAASE,KAAKhE,QAAQ,GAAGqE,KAC9B9B,SAAUuB,EAASE,KAAKI,KAAK7B,SAC7BC,SAAUsB,EAASE,KAAKI,KAAK5B,UAE/B,EAAKW,SAAS,CAAEnD,QAAS+D,QA3Hf,EAiIdO,OAAS,SAAC3C,GAER,EAAKwB,SAAS,CAAES,UAAWjC,KAjI3B,EAAK2B,MAAQ,CACXiB,OAAQ,CACNC,SAAU,GACVC,WAAY,KAEdzE,QAAS,GACT4D,UAAW,GACXR,MAAO,UATG,E,+CAed,SAAYW,GACVW,KAAKvB,SAAS,CAAEnD,QAAS+D,M,+BAmC3B,WAAqB,IAAD,OAEfY,UAAUC,YACXD,UAAUC,YAAYC,oBAAmB,SAACC,GACxC,IAAIC,EAAgB,CAClBP,SAAUM,EAASP,OAAOC,SAC1BC,UAAWK,EAASP,OAAOE,WAE7B,EAAKtB,SAAS,CAACoB,OAAOQ,IAGtBrB,IAAMC,IAAN,6DAAgE,EAAKL,MAAMiB,OAAOC,SAAlF,gBAAkG,EAAKlB,MAAMiB,OAAOE,UAApH,0BAA+I1B,EAA/I,kBAAuKc,MAAK,SAAAC,GAC1K,IAAIC,EAAc,CAChBjD,SAAUgD,EAASE,KAAKC,KACxBxB,KAAMqB,EAASE,KAAKvB,KAAKyB,MACzBxB,SAAUoB,EAASE,KAAKvB,KAAK0B,IAC7BlE,YAAa6D,EAASE,KAAKI,KAAKlB,KAChChD,YAAa4D,EAASE,KAAKhE,QAAQ,GAAGE,YACtCE,IAAK0D,EAASE,KAAKhE,QAAQ,GAAGqE,KAC9B9B,SAAUuB,EAASE,KAAKI,KAAK7B,SAC7BC,SAAUsB,EAASE,KAAKI,KAAK5B,UAE/B,EAAKW,SAAS,CAAEnD,QAAS+D,UAE1B,SAACiB,GAEIA,EAAMC,OAASD,EAAME,mBACvBC,QAAQC,IAAI,8CAEd1B,IAAMC,IAAN,8EAAiFZ,EAAjF,kBAAyGc,MAAK,SAAAC,GAC5G,IAAIC,EAAc,CAChBjD,SAAUgD,EAASE,KAAKC,KACxBxB,KAAMqB,EAASE,KAAKvB,KAAKyB,MACzBxB,SAAUoB,EAASE,KAAKvB,KAAK0B,IAC7BlE,YAAa6D,EAASE,KAAKI,KAAKlB,KAChChD,YAAa4D,EAASE,KAAKhE,QAAQ,GAAGE,YACtCE,IAAK0D,EAASE,KAAKhE,QAAQ,GAAGqE,KAC9B9B,SAAUuB,EAASE,KAAKI,KAAK7B,SAC7BC,SAAUsB,EAASE,KAAKI,KAAK5B,UAE/B,EAAKW,SAAS,CAAEnD,QAAS+D,IAIzBoB,QAAQC,IAAItB,SAMlBqB,QAAQC,IAAI,mD,oBAiChB,WACE,OACE,qBAAK/E,UAAU,MAAf,SACE,sBAAKA,UAAW,OAAhB,UACE,cAACQ,EAAD,CAAQO,cAAiBsD,KAAKtD,cAAeK,aAAciD,KAAKJ,OAAQtE,QAAS0E,KAAKpB,MAAMtD,QAASoC,YAAasC,KAAKtC,YAAagB,MAAOsB,KAAKpB,MAAMF,QACtJ,cAACtD,EAAD,CAAgBE,QAAS0E,KAAKpB,MAAMtD,UACpC,cAACsC,EAAD,CAAStC,QAAS0E,KAAKpB,MAAMtD,mB,GA/IrBqF,IAAMC,WCJxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B/F,EAAOC,QAAU,CAAC,cAAgB,sCAAsC,eAAiB,0C","file":"static/js/main.19128c02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"visually__hidden\":\"Navbar_visually__hidden__1uKa3\",\"menu_wrap\":\"Navbar_menu_wrap__1pxQJ\",\"menu\":\"Navbar_menu__1l3EA\",\"form\":\"Navbar_form__17otO\",\"form__OKbtn\":\"Navbar_form__OKbtn__3gmzT\",\"form__input\":\"Navbar_form__input__3uiml\",\"form__changes\":\"Navbar_form__changes__3ltnk\",\"form__location\":\"Navbar_form__location__2KOSC\",\"switch\":\"Navbar_switch__3glyu\",\"switch__wrap\":\"Navbar_switch__wrap__vU6WX\",\"switch__Cbtn\":\"Navbar_switch__Cbtn__1Mz-5\",\"switch__Fbtn\":\"Navbar_switch__Fbtn__2IAx6\",\"active\":\"Navbar_active__sYbkR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"InfoBar_info__UekPn\",\"info__block\":\"InfoBar_info__block__1qquP\"};","import React from 'react';\r\nimport style from'./DisplayWeather.module.css';\r\n\r\nexport default function DisplayWeather (props) {\r\n  const { temperature, description, img } = props.weather;\r\n  // const { temperature, description } = props.weather;\r\n  // console.log(props)\r\n\r\n  let iconurl = \"http://openweathermap.org/img/wn/\" + img + \"@2x.png\";\r\n\r\n  // const compassPoints = [\"North\", \"North East\", \"East\", \"South East\", \"South\", \"South West\", \r\n  //                          \"West\", \"North West\"];\r\n\r\n  \r\n\r\n  // console.log('the wind is ' + compassPoints[arrayPosition])\r\n\r\n  return (\r\n    <div>\r\n      <section className={style.weather}>\r\n        <div className={style.weather__temp}>\r\n          <div className={style.weather__title}>\r\n            <img className=\"mainImg\" src={iconurl} alt=\"weather-img\" />\r\n            <span>{Math.round(temperature)}<sup>o</sup></span>\r\n          </div>\r\n          <p>{description}</p> \r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport style from'./Navbar.module.css';\r\n\r\n\r\nexport default function Navbar (props) {\r\n  const { temperature, location } = props.weather;\r\n\r\n  return (\r\n    <div className={style.menu_wrap}>\r\n      <nav className={style.menu}>\r\n        <form className={style.form} onSubmit={(e) => props.changeWeather(e)}>\r\n          <label className={style.visually__hidden}>Название города</label>\r\n          <input className={style.form__input} placeholder={location || ''} onChange={(e) => props.changeRegion(e.target.value)} />\r\n\r\n          <button className={style.form__OKbtn}>OK</button>\r\n          <div className={style.form__changes}>\r\n            <p>Сменить город</p>\r\n            <p className={style.form__location}>\r\n              {/* <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.489 5.83819L5.23895 16.6268L13.728 18.2769L18.2146 25.7637L22.489 5.83819Z\" fill=\"white\" fill-opacity=\"0.4\"/>\r\n              </svg> */}\r\n              Мое местоположение</p>\r\n          </div>\r\n        </form>\r\n\r\n        <div className={style.switch}>\r\n          <span><sup>o</sup></span>\r\n          <div className={style.switch__wrap}>\r\n            <button className={style.switch__Cbtn + ' ' + style.active} onClick={() => props.changeUnits('metric', temperature)}>C</button>\r\n            <button className={style.switch__Fbtn} onClick={() => props.changeUnits('imperial', temperature)}>F</button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport style from'./InfoBar.module.css';\r\n\r\nexport default function InfoBar (props) {\r\n  const { humidity, pressure, wind, wind_dir } = props.weather;\r\n  const compassPoints = [\"северный\", \"северо-восточный\", \"восточный\", \"юго-восточный\", \"южный\", \"юго-западный\",\r\n                          \"западный\", \"северо-западный\"];\r\n  let rawPosition = Math.floor((wind_dir / 22.5) + 0.5);\r\n  let arrayPosition = (rawPosition % 8);\r\n\r\n  return (\r\n    <div>\r\n    <section className={style.info}>\r\n        <div className={style.info__block}>\r\n          <p>Ветер</p>\r\n          <span>{Math.round(wind)} м/с, {compassPoints[arrayPosition]}</span>\r\n        </div>\r\n        <div className={style.info__block}>\r\n          <p>Давление</p>\r\n          <span>{pressure} мм рт. ст.</span>\r\n        </div>\r\n        <div className={style.info__block}>\r\n          <p>Влажность</p>\r\n          <span>{humidity}%</span>\r\n        </div>\r\n        <div className={style.info__block}>\r\n          <p>Вероятность дождя</p>\r\n          <span>10%</span>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\nimport './App.css';\r\nimport DisplayWeather from './components/DisplayWeather.js';\r\nimport Navbar from './components/Navbar.js';\r\nimport InfoBar from './components/InfoBar.js';\r\n\r\nconst API_KEY = '27ba8c742a54e5d3e7e1e27f3a0e5fa4';\r\n\r\nclass App extends React.Component {\r\n\r\n  //state \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      coords: {\r\n        latitude: 51,\r\n        longitude: -0.12\r\n      },\r\n      weather: {},\r\n      inputData: '',\r\n      units: 'metric'\r\n    }; \r\n\r\n    // this.initialData = this.initialData.bind(this);\r\n  }\r\n\r\n  initialData(weatherData) {\r\n    this.setState({ weather: weatherData});\r\n\r\n  }\r\n\r\n  changeUnits=(unit,temp)=> {\r\n    this.setState({\r\n      units: unit\r\n  })\r\n\r\n  switch(unit) {\r\n    case 'imperial':\r\n      let fahrenheit = Math.round((temp * 1.8) + 32);\r\n      this.setState({\r\n        weather: {\r\n        ...this.state.weather,\r\n        temperature: fahrenheit\r\n        }\r\n      });\r\n      break;\r\n    case 'metric':\r\n      let celsius = Math.round(((temp - 32) / 1.8));\r\n      this.setState({\r\n        weather: {\r\n        ...this.state.weather,\r\n        temperature: celsius\r\n        }\r\n      });\r\n      break;\r\n    default:\r\n      unit='metric';\r\n    } \r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {    \r\n    // get device location\r\n    if(navigator.geolocation){\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        let currentCoords = {\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude\r\n        };\r\n        this.setState({coords:currentCoords});\r\n        \r\n        //API call\r\n        Axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${this.state.coords.latitude}&lon=${this.state.coords.longitude}&lang=ru&appid=${API_KEY}&units=metric`).then(response => {\r\n          let weatherData = {\r\n            location: response.data.name,\r\n            wind: response.data.wind.speed,\r\n            wind_dir: response.data.wind.deg,\r\n            temperature: response.data.main.temp,\r\n            description: response.data.weather[0].description,\r\n            img: response.data.weather[0].icon,\r\n            humidity: response.data.main.humidity,\r\n            pressure: response.data.main.pressure\r\n          };\r\n          this.setState({ weather: weatherData});\r\n        })\r\n      }, (error) => {\r\n          // this runs when an error occurs or when you deny access\r\n          if (error.code === error.PERMISSION_DENIED) {\r\n            console.log(\"User denied the request for Geolocation:-(\");\r\n          }\r\n          Axios.get(`http://api.openweathermap.org/data/2.5/weather?q=Omsk&lang=ru&appid=${API_KEY}&units=metric`).then(response => {\r\n            let weatherData = {\r\n              location: response.data.name,\r\n              wind: response.data.wind.speed,\r\n              wind_dir: response.data.wind.deg,\r\n              temperature: response.data.main.temp,\r\n              description: response.data.weather[0].description,\r\n              img: response.data.weather[0].icon,\r\n              humidity: response.data.main.humidity,\r\n              pressure: response.data.main.pressure\r\n            };\r\n            this.setState({ weather: weatherData});\r\n            // initialData(weatherData);\r\n            // console.log(this);\r\n\r\n            console.log(response);\r\n          })\r\n        }\r\n      );\r\n      // navigator.permissions.query({ name: 'geolocation' }).then(console.log(\"Geolocation is not supported by this browser.\"));\r\n    } else {\r\n      console.log(\"Geolocation is not supported by this browser.\")      \r\n    }\r\n\r\n  }\r\n\r\n  // options = {\r\n  //   types: ['(cities)']\r\n  // }  \r\n\r\n  changeWeather = (evt) => {\r\n    evt.preventDefault();\r\n    Axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.inputData}&lang=ru&appid=${API_KEY}&units=metric`).then(response => {\r\n      let weatherData = {\r\n        location: response.data.name,\r\n        wind: response.data.wind.speed,\r\n        wind_dir: response.data.wind.deg,\r\n        temperature: response.data.main.temp,\r\n        description: response.data.weather[0].description,\r\n        img: response.data.weather[0].icon,\r\n        humidity: response.data.main.humidity,\r\n        pressure: response.data.main.pressure\r\n      };\r\n      this.setState({ weather: weatherData});\r\n    })\r\n  }\r\n  // changeUnits={this.changeUnits}\r\n\r\n  //track the input value\r\n  change = (value) => {\r\n    // this.autocompliete = new google.maps.places.Autocomplete(input, options);\r\n    this.setState({ inputData: value});\r\n  }  \r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className={'wrap'}>\r\n          <Navbar changeWeather = {this.changeWeather} changeRegion={this.change} weather={this.state.weather} changeUnits={this.changeUnits} units={this.state.units}/>\r\n          <DisplayWeather weather={this.state.weather} />\r\n          <InfoBar weather={this.state.weather} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather__temp\":\"DisplayWeather_weather__temp__3mkJ4\",\"weather__title\":\"DisplayWeather_weather__title__1j9q8\"};"],"sourceRoot":""}